batch_dict dict_keys(['points', 'frame_id', 'gt_boxes', 'use_lead_xyz', 'image_shape', 'batch_size'])
batch_dict: 
 dict_keys(['points', 'frame_id', 'gt_boxes', 'use_lead_xyz', 'image_shape', 'batch_size']) 


------------------------------MSG------------------------------
batch_dict: 
 dict_keys(['points', 'frame_id', 'gt_boxes', 'use_lead_xyz', 'image_shape', 'batch_size', 'point_features', 'point_coords']) 


---------------------------------------------------------------


------------------------------Head-----------------------------
point_cls_preds:  torch.Size([32768, 3]) 

point_box_preds:  torch.Size([32768, 8]) 


#########assing target###########

####################points_in_boxes_gpu
points:  torch.Size([1, 16384, 3]) 

boxes:  torch.Size([1, 35, 7])
#######################################


####################points_in_boxes_gpu
points:  torch.Size([1, 16384, 3]) 

boxes:  torch.Size([1, 35, 7])
#######################################


####################points_in_boxes_gpu
points:  torch.Size([1, 16384, 3]) 

boxes:  torch.Size([1, 35, 7])
#######################################


####################points_in_boxes_gpu
points:  torch.Size([1, 16384, 3]) 

boxes:  torch.Size([1, 35, 7])
#######################################

batch_dict: 
 dict_keys(['points', 'frame_id', 'gt_boxes', 'use_lead_xyz', 'image_shape', 'batch_size', 'point_features', 'point_coords', 'point_cls_scores', 'batch_cls_preds', 'batch_box_preds', 'batch_index', 'cls_preds_normalized']) 



---------------------------------Proposal Layer--------------------------------
batch_box_preds:  torch.Size([32768, 7]) 

batch_cls_preds:  torch.Size([32768, 3]) 

rois:  torch.Size([2, 512, 7]) 

rois_scores:  torch.Size([2, 512]) 

rois_labels:  torch.Size([2, 512]) 

batch_mask:  torch.Size([32768]) 

box_preds:  torch.Size([16384, 7]) 

cls_preds:  torch.Size([16384, 3]) 

box_preds[0:5,:]:  tensor([[ 10.8094,   1.3643,  -2.2469,   1.7737,   0.7434,   1.6767,   2.4659],
        [  8.8225,   2.7281,  -1.6798,   0.7701,   0.6159,   2.0661,  -1.8762],
        [ 19.8971, -10.4242,  -1.8326,   0.7495,   0.6691,   1.7763,   2.6685],
        [ 11.9935,  -2.7118,  -1.3831,   2.1162,   0.6980,   2.2515,  -2.2360],
        [ 12.2501, -12.5881,  -0.4646,   1.9067,   0.6088,   2.1730,  -3.1161]],
       device='cuda:0') 

cls_preds[0:5,:]:  tensor([[-0.0700,  0.0075,  0.5400],
        [-0.0447,  0.0146, -0.0853],
        [-0.0738,  0.2804, -0.1045],
        [ 0.0672, -0.0635,  0.3051],
        [-0.1891,  0.0921,  0.2919]], device='cuda:0') 

cur_roi_scores:  torch.Size([16384]) 

cur_roi_labels:  torch.Size([16384]) 

cur_roi_scores[0:5]:  tensor([0.5400, 0.0146, 0.2804, 0.3051, 0.2919], device='cuda:0') 

cur_roi_labels[0:5]:  tensor([2, 1, 1, 2, 2], device='cuda:0') 

selected box num:  512 

batch_mask:  torch.Size([32768]) 

box_preds:  torch.Size([16384, 7]) 

cls_preds:  torch.Size([16384, 3]) 

box_preds[0:5,:]:  tensor([[  7.8637, -28.2314,  -0.8362,   4.0780,   1.6593,   1.8154,   2.3748],
        [ 17.0587, -13.5942,  -1.8956,   4.3665,   1.7033,   2.0018,   2.7599],
        [  3.5061,  -9.3632,  -1.0657,   3.6014,   1.9036,   2.1026,   1.5032],
        [ 12.8668,  -9.5847,  -2.2188,   0.7477,   0.6981,   1.8922,  -0.8336],
        [  6.6580,  -2.7119,  -0.9824,   0.8062,   0.6991,   1.6738,  -1.9589]],
       device='cuda:0') 

cls_preds[0:5,:]:  tensor([[ 0.2572,  0.1874,  0.1207],
        [ 0.0703, -0.2908, -0.0385],
        [ 0.0551, -0.0021, -0.0871],
        [-0.0789,  0.1015, -0.2886],
        [ 0.3854,  0.5288,  0.2255]], device='cuda:0') 

cur_roi_scores:  torch.Size([16384]) 

cur_roi_labels:  torch.Size([16384]) 

cur_roi_scores[0:5]:  tensor([0.2572, 0.0703, 0.0551, 0.1015, 0.5288], device='cuda:0') 

cur_roi_labels[0:5]:  tensor([0, 0, 0, 1, 1], device='cuda:0') 

selected box num:  512 

